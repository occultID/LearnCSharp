using LearnCSharp.Basic;
using LearnCSharp.Professional;

namespace LearnCSharp
{
    internal static class DirectNavigation
    {
        private readonly static Dictionary<string, Action> funcDic = new Dictionary<string, Action>()
        {
            ["10101"] = HelloWorld.SayHello,
            ["10201"] = LearnKeyWords.LearnAccessibilityLevelKeywords,
            ["10210"] = LearnKeyWords.LearnLiteralKeywords,
            ["10301"] = LearnLiteralsAndOthers.StartLearnLiteralsAndOthers,
            ["10401"] = LearnDataType.LearnObject,
            ["10402"] = LearnDataType.LearnDynamic,
            ["10501"] = LearnSimpleType.LearnIntegerType,
            ["10502"] = LearnSimpleType.LearnFloatingPointType,
            ["10503"] = LearnSimpleType.LearnCharacterType,
            ["10504"] = LearnSimpleType.LearnBooleanType,
            ["10505"] = LearnSimpleType.LearnStringType,
            ["10506"] = LearnSimpleType.LearnObjectType,
            ["10507"] = LearnSimpleType.LearnDynamicType,
            ["10601"] = LearnTuple.StartLearnTuple,
            ["10701"] = LearnCastingAndTypeConversion.LearnImplicitConversion,
            ["10702"] = LearnCastingAndTypeConversion.LearnExplicitCasting,
            ["10703"] = LearnCastingAndTypeConversion.LearnCastingTool,
            ["10801"] = LearnArray.LearnSingleDimensionalArray,
            ["10802"] = LearnArray.LearnMultiDimensionalArray,
            ["10803"] = LearnArray.LearnJaggedArray,
            ["10901"] = LearnEnum.StartLearnEnum,
            ["11001"] = LearnOperatorAndExpression.LearnArithmeticOperator,
            ["11002"] = LearnOperatorAndExpression.LearnBooleanLogicalOperator,
            ["11003"] = LearnOperatorAndExpression.LearnBitwiseAndShiftOperator,
            ["11004"] = LearnOperatorAndExpression.LearnEqualityAndComparisonOperator,
            ["11005"] = LearnOperatorAndExpression.LearnMemberAccessOperator,
            ["11006"] = LearnOperatorAndExpression.LearnNullOperator,
            ["11007"] = LearnOperatorAndExpression.LearnCollectionExpressionOperator,
            ["11008"] = LearnOperatorAndExpression.LearnTypeTestingAndCastOperator,
            ["11009"] = LearnOperatorAndExpression.LearnAssignmentOperator,
            ["11010"] = LearnOperatorAndExpression.LearnConditionalOperator,
            ["11011"] = LearnOperatorAndExpression.LearnAnonymousFuncAndLambdaOperator,
            ["11012"] = LearnOperatorAndExpression.LearnPointerOperator,
            ["11013"] = LearnOperatorAndExpression.LearnOtherPrimaryOperator,
            ["11014"] = LearnOperatorAndExpression.LearnOtherUnaryOperator,
            ["11015"] = LearnOperatorAndExpression.LearnSwitchAndWithOperator,
            ["11016"] = LearnOperatorAndExpression.LearnOperatorOverload,
            ["11001"] = LearnStatements.LearnEndPointsAndReachability,
            ["11002"] = LearnStatements.LearnLabeledStatement,
            ["11003"] = LearnStatements.LearnDeclarationStatement,
            ["11004"] = LearnStatements.LearnBlockStatement,
            ["11005"] = LearnStatements.LearnExpressionStatement,
            ["11006"] = LearnStatements.LearnSelectionStatement,
            ["11007"] = LearnStatements.LearnIterationStatement,
            ["11008"] = LearnStatements.LearnGotoStatement,
            ["11009"] = LearnStatements.LearnBreakAndContinueStatement,
            ["11010"] = LearnStatements.LearnThrowAndReturnStatement,
            ["11011"] = LearnStatements.LearnTryStatement,
            ["11012"] = LearnStatements.LearnUsingStatement,
            ["11013"] = LearnStatements.LearnYieldStatement,
            ["11014"] = LearnStatements.LearnCheckedAndUncheckedStatement,
            ["11015"] = LearnStatements.LearnLockStatement,
            ["11016"] = LearnStatements.LearnEmptyStatement,
            ["11117"] = LearnStatements.LearnUnsafeStatement,
            ["11118"] = LearnStatements.LearnFixedStatement,
            ["11201"] = LearnMethod.StartLearnMethod,
            ["11301"] = LearnLocalFunction.StartLearnLocalFunction,
            ["11401"] = LearnExtensionMethod.StartLearnExtensionMethod,
            ["11501"] = LearnVariables.LearnStaticVariables,
            ["11502"] = LearnVariables.LearnInstanceVariables,
            ["11503"] = LearnVariables.LearnArrayElements,
            ["11504"] = LearnVariables.LearnValueParameters,
            ["11505"] = LearnVariables.LearnReferenceParameters,
            ["11506"] = LearnVariables.LearnOutputParameters,
            ["11507"] = LearnVariables.LearnLocalVariable,
            ["11601"] = LearnParameter.LearnValueParameter,
            ["11602"] = LearnParameter.LearnReferenceParameter,
            ["11603"] = LearnParameter.LearnOutputParameter,
            ["11604"] = LearnParameter.LearnInParameter,
            ["11605"] = LearnParameter.LearnParameterArray,
            ["11606"] = LearnParameter.LearnDefaultParameter,
            ["11607"] = LearnParameter.LearnThisParameter,
            ["11608"] = LearnParameter.LearnNamelyArgument,
            ["11701"] = LearnNamespace.StartLearnNamespace,
            ["11801"] = LearnClass.StartLearnClass,
            ["11901"] = LearnExpressionBodied.StartLearnExpressionBodied,
            ["12001"] = LearnInheritanceAndPolymorphism.StartLearnInheritanceAndPolymorphism,
            ["12101"] = LearnInterface.StartLearnInterface,
            ["12201"] = LearnStruct.StartLearnStruct,
            ["12301"] = LearnRecord.StartLearnRecord,
            ["12401"] = LearnAnonymousType.StartLearnAnonymousType,
            ["12601"] = LearnPattern.LearnConstantPattern,
            ["12602"] = LearnPattern.LearnRelationalPattern,
            ["12603"] = LearnPattern.LearnLogicalPattern,
            ["12604"] = LearnPattern.LearnDeclarationPattern,
            ["12605"] = LearnPattern.LearnTypePattern,
            ["12606"] = LearnPattern.LearnPropertyPattern,
            ["12607"] = LearnPattern.LearnPositionalPattern,
            ["12608"] = LearnPattern.LearnVarPattern,
            ["12609"] = LearnPattern.LearnDiscardPattern,
            ["12610"] = LearnPattern.LearnParenthesizedPattern,
            ["12611"] = LearnPattern.LearnListPattern,
            ["12612"] = LearnPattern.LearnSlicePattern,
            ["20101"] = LearnDelegate.LearnSystemDelegate,
            ["20102"] = LearnDelegate.LearnCustomerDelegate,
            ["20103"] = LearnDelegate.LearnMultiDelegate,
            ["20201"] = LearnAnonymousFunction.LearnAnonymousMethods,
            ["20202"] = LearnAnonymousFunction.LearnStatement_Lambda,
            ["20203"] = LearnAnonymousFunction.LearnExpression_Lambda,
            ["20204"] = LearnAnonymousFunction.LearnLambdaNotCatchOuterVariable,
            ["20205"] = LearnAnonymousFunction.LearnLambdaCatchOuterVariable,
            ["20206"] = LearnAnonymousFunction.LearnLambdaCatchOuterForeachLoopVariable,
            ["20207"] = LearnAnonymousFunction.LearnLambdaCatchOuterForLoopVariable,
            ["20301"] = LearnEvent.StartLearnEvent,
            ["20401"] = LearnCollection.LearnSystemCollection,
            ["20402"] = LearnCollection.LearnCustomerCollection,
            ["20501"] = LearnGenericType.StartLearnGenericType,
            ["20601"] = LearnLinq.LearnLINQQuerySyntax,
            ["20602"] = LearnLinq.LearnLINQMethodSyntax,
            ["21001"] = LearnProcessAndThread.LearnProcess,
            ["21002"] = LearnProcessAndThread.LearnThread,
            ["00000"] = Test.TestFunc
        };

        public static void DirectNavigate(string code)
        {
            if (!string.IsNullOrWhiteSpace(code) && funcDic.TryGetValue(code, out Action? action)) 
                action!.Invoke();
        }
    }
}
